// { Driver Code Starts
#include <bits/stdc++.h> 
using namespace std; 

 // } Driver Code Ends
class Solution
{   
    public: 
    //Function to return a list of integers denoting spiral traversal of matrix.
    vector<int> spirallyTraverse(vector<vector<int> > matrix, int n, int m) 
    {
             int l=0,r=m,t=0,d=n,i;
    vector<int>ans;
    while(l<r&&t<d){
       
       
        for(i=l;i<r;i++)
            ans.push_back(matrix[t][i]);
            t++;
           
       for(i=t;i<d;i++)
           ans.push_back(matrix[i][r-1]);
           r--;
           
           if(t<d){
           for(i=r-1;i>=l;i--)
            ans.push_back(matrix[d-1][i]);
            d--;
           }
            
           if(l<r){
             for(i=d-1;i>=t;i--)
            ans.push_back(matrix[i][l]);
            l++;
           }
            
        
    }
    return ans;
    }
};

// { Driver Code Starts.
int main() {
    int t;
    cin>>t;
    
    while(t--) 
    {
        int r,c;
        cin>>r>>c;
        vector<vector<int> > matrix(r); 

        for(int i=0; i<r; i++)
        {
            matrix[i].assign(c, 0);
            for( int j=0; j<c; j++)
            {
                cin>>matrix[i][j];
            }
        }

        Solution ob;
        vector<int> result = ob.spirallyTraverse(matrix, r, c);
        for (int i = 0; i < result.size(); ++i)
                cout<<result[i]<<" ";
        cout<<endl;
    }
    return 0;
}  // } Driver Code Ends