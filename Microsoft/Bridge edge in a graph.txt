void dfs(int u,vector<int> &visited,vector<int> adj[],int d){
        visited[u] = 1;
       
        for(auto it:adj[u]){
            if(!visited[it]){
                dfs(it,visited,adj,d);
                }
                     }
    }
    
    public:
    int isBridge(int V, vector<int> adj[], int c, int d) 
    {
        // Code here
        // remove the edge
        // run dfs from c to check connectivity of c-d
        // call a dfs call for c and see if d is visited in that
        vector<int> vec[V];
       for(int i=0;i<V;i++)
        {
            for( auto x : adj[i])
            {
                if((x==c and i==d) || (x==d and i==c))
                {
                    continue;
                }
                vec[i].push_back(x);
            }
        }
        //dfs
        vector<int> visited(V,0);
        dfs(c,visited,vec,d);
        return  !visited[d];
    }
	
    //Function to find if the given edge is a bridge in graph.

        
    
};

