class Solution{
     
      // see dp soln  
     public:
    int solve(int remaining_sum,int x,int base){
        int res=pow(base,x);
       if(remaining_sum==res)
          return 1;
          if(remaining_sum<res)// it cannot be xpressed as a sum of natural no
           return 0;
          int a=solve(remaining_sum-res,x,base+1);
          int y=solve(remaining_sum,x,base+1);
          return a+y;
    }
    
    
    long long  numOfWays(int n,int x){
        return solve(n,x,1);
    }
};

// { Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int  n, x;
        cin >> n >> x;
        Solution ob;
        cout<<ob.numOfWays(n, x)<<endl;
    }
    return 0;
}
  // } Driver Code Ends