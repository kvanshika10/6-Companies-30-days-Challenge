void dfs(vector<vector<int>> &heights, vector<vector<bool>>&visited, int i, int j){ 
         // explaination in  voice notessssssss
        int n=heights.size();
       int m=heights[0].size();
       
            visited[i][j]=1;
              if(i-1>=0&&!visited[i-1][j]&&heights[i][j]<=heights[i-1][j])
                      dfs(heights,visited,i-1,j);
            if(j-1>=0&&!visited[i][j-1]&&heights[i][j]<=heights[i][j-1])
                dfs(heights,visited,i,j-1);
            if(i+1<n&&!visited[i+1][j]&&heights[i][j]<=heights[i+1][j])
                dfs(heights,visited,i+1,j);
            if(j+1<m&&!visited[i][j+1]&&heights[i][j]<=heights[i][j+1])
                dfs(heights,visited,i,j+1);
                
                }
    
    
    
    
    vector<vector<int>> pacificAtlantic(vector<vector<int>>& heights) {
          
       int n=heights.size();
       int m=heights[0].size();
        
         vector<vector<bool>>pacific(n,vector<bool>(m,0));
         vector<vector<bool>>atlantic(n,vector<bool>(m,0));
        vector<vector<int>>ans;

        for(int i=0;i<n;i++){dfs(heights,pacific,i,0);dfs(heights,atlantic,i,m-1);}
         for(int j=0;j<m;j++){dfs(heights,pacific,0,j);dfs(heights,atlantic,n-1,j);}
        
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(pacific[i][j]&&atlantic[i][j])
                  ans.push_back({i,j});
              }
           }
        
       
        
        return ans;
    
    
    
    }
        
};