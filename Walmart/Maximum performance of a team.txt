class Solution {
public:
    
    int maxPerformance(int n, vector<int>& speed, vector<int>& efficiency, int k) {
        long long int m=1000000007;
        // for every efficiency find speed of k engineers
        vector<pair<int,int>>v1;
        priority_queue<long long int,vector<long long int>,greater<long long int>>pq;// to find the min element
        for(int i=0;i<n;i++){
            v1.push_back({efficiency[i],speed[i]});
            }
        sort(v1.begin(),v1.end());
        long long int sum=0,ans=0;
        for(int i=n-1;i>=0;i--){
            if(pq.size()==k){
                sum-=pq.top();
                pq.pop();
                }
            pq.push(v1[i].second);
            sum+=v1[i].second;
            
            
            ans=max(ans,sum*v1[i].first);
                
        }
        return ans%m;
    }
};