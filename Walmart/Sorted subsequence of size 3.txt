class Solution{
  public:
    vector<int> find3Numbers(vector<int> arr, int N) {
        // obvio not easy one
        int left[N],right[N],i;
        left[0]=-1;
        int mini=arr[0];
        for(i=1;i<N;i++){
            if(arr[i]<mini){
                mini=arr[i];
            }
            if(mini==arr[i])
             left[i]=-1;
             else left[i]=0;
        }
        
        right[N-1]=-1;
        int maxi=arr[N-1];
         for(i=N-2;i>=0;i--){
            if(arr[i]>maxi){
                maxi=arr[i];
            }
            if(maxi==arr[i])
             right[i]=-1;
             else right[i]=0;
            
        }
        
        for(i=1;i<N-1;i++){
    
            if(left[i]!=-1&&right[i]!=-1)
                break;
        }
        
        
        vector<int>v1;
        int j;
        for(j=0;j<i;j++){
            if(arr[i]>arr[j]){
            v1.push_back(arr[j]);
            break;
        }
        }
        v1.push_back(arr[i]);
        for(j=i+1;j<N;j++){
            if(arr[i]<arr[j]){
            v1.push_back(arr[j]);
              break;
                   }
        }
         if(v1.size()<3)
           return {};
        return v1;
    }
};

// { Driver Code Starts.

// Driver program to test above function
int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        vector<int> a(n);
        for (int i = 0; i < n; i++) cin >> a[i];
        Solution obj;
        auto res = obj.find3Numbers(a, n);

        // wrong format output
        if (!res.empty() and res.size() != 3) {
            cout << -1 << "\n";
        }

        if (res.empty()) {
            cout << 0 << "\n";
        } else if ((res[0] < res[1] and res[1] < res[2]) and
                   isSubSequence(a, res, n, res.size())) {
            cout << 1 << "\n";
        } else {
            cout << -1 << "\n";
        }
    }

    return 0;
}  // } Driver Code Ends